.\" A few notes:
.\" i) Don't add extra blank lines - these appear in the output and
.\"    leaves too much space when display on the screen
.\"
.\" This title line needs to be changed to contain your program name,
.\" but the date will be changed automatically by RCS.
.TH rasta 1 "$Date: 1996/11/05 22:40:12 $" ICSI
.\" Don't do anything clever in the section below - it messes up the
.\" whatis database that's accessed using "man -k"
.SH NAME
rasta \- computes plp or rasta-plp features.
.SH SYNOPSIS
.B rasta
.RB "[" options "]"
.SH DESCRIPTION
.I rasta
computes variants of the Perceptual Linear Prediction (PLP)
analysis, including several forms of RASTA processing. It reads
one of several possible input files containing audio waveforms,
and outputs one of several formats of feature vectors, one vector per
frame.  At least one option (described below) is required.
.SH OPTIONS
.TP 1i			\" Indent the paragraph
.B \-O " [FALSE] "
for online processing 
.TP
.B \-d " [FALSE]"
for debug output 
.TP
.B \-M " [FALSE]"
adds a small constant to the power spectrum equivalent to one bit of random
noise on the input.  This helps to avoid the numerical problems that occur
when there are long stretches of zeros in the data.
.TP
.B \-F " [FALSE]"
for highpass filter on input (for dc offset) 
.TP
.B \-a " [FALSE]"
for input ascii file.
Default input is binary shorts
.TP
.B \-A " [FALSE]"
for ascii output file.. 
Default output is binary floats.
.TP
.B \-e " [FALSE]"
for ESPS format input files;
overrules other input options.
.TP
.B \-E " [FALSE]"
for ESPS format output files;
overrules other output options.
.TP
.B \-b " [FALSE]"
for MAT format input files;
overrules other input options.
.TP
.B \-B " [FALSE]"
for MAT format output files;
overrules other output options.
.TP
.B \-z " [FALSE]"
for SPHERE format input files;
overrules other input options.
.TP
.B \-k " [FALSE]"
for Abbot I/O.
.TP
.B \-T " [FALSE]"
Input is little-endian.
This option makes sense only with raw binary shorts as input.
.TP
.B \-U " [FALSE]"
Output is little-endian.
This option makes sense only with raw binary floats as output.
.TP
.B \-y " [FALSE]"
Pad input to produce frames where the ((n + 0.5) * M)-th point is
centered in the n-th frame.  M is the number of points per step.  A
total of L/M frames will be produced, where L is the overall signal
length.  There must be at least one window's worth of input data to
produce output.  This option works for both normal and online (-O
option) input.
.TP
.B \-L " [FALSE]"
for log rasta 
.TP
.B \-J " [FALSE]"
for JAH rasta 
.TP
.B \-C " [FALSE]"
for constant JAH.  This option should generally be used during
recognizer training.
Default is adapting JAH according to noisepower.
Only use option -C when -J is used
.TP
.B \-R " [FALSE]"
for getting critical band values as output (ASCII)
instead of cepstral coefficients.
This is useful for users who would like to find
their own spectral mapping coefficients.
This overrules the -P option.
.TP
.B \-P " [FALSE]"
for getting cube root compressed and equalized
critical band values as output instead of cepstral coefficients.
.TP
.B \-g " [compute gain]"
don't compute gain.
.TP
.B \-h " [FALSE]"
use stored noise level estimation and RASTA filter
history for initialization (if history file is
available, otherwise use normal initialization).
.TP
.BI \-i " input file" " [stdin]"
.TP
.BI \-o " output file" " [stdout]"
.TP
.BI \-f " mapping file"
JAH Rasta mapping coefficients input text file; specifies
a multi-linear regression to reduce the variance introduced by
using different J values.  There is no default, because you must
create your own mapping file.  See the examples section for the reason why.
.TP
.BI \-r " rasta mixing coefficient" " [1.0]"
for partially rasta, partially plp
e.g. -r 1.0 => no mixing, -r 0.8 => 80% rasta 20% PLP
.TP
.BI \-w " analysis window size" " [20]"
(in milliseconds)
.TP
.BI \-W " windowing constant" " [0.540000]"
.TP
.BI \-s " window step size" " [10]"
(in milliseconds)
.TP
.BI \-S " Sampling frequency" " [8000]"
(in Hertz)
.TP
.BI \-l " liftering exponent" " [0.600000]"
.TP
.BI \-p " pole value" " [0.940000]"
.TP
.BI \-m " model order" " [8]"
.TP
.BI \-n " number of output parameters" 
where default is model order plus 1 (log gain) 
and log gain is given first
.TP
.BI \-c " number of crit band filters"
where default depends on sampling freq, but is 17 for 8000 Hz
.TP
.BI \-v " use triangular filters"
Use triangular auditory filters instead of the default trapezoidal filters.
.TP
.BI \-N " numerator rastafilt file"
unimplemented in release version 2.2
.TP
.BI \-D " denominator rastafilt file"
unimplemented in release version 2.2
.TP
.BI \-j " Constant J" " [1.000000e-06] "
depends on the noise level, ( smaller for more noisy speech).
Only use option -j when -C is used.
.TP
.BI \-H " History filename" " [history.out] "
File containing noise level and filter history for initialization.
.SH EXAMPLES
To compute log RASTA-PLP (which is optimal for the case of convolutional
error, as when the speech input has been run through a linear
time-invariant filter), with ascii input and ESPS-compatible output:

	rasta -a -E -L < infile.asc > esps_outfile

This will use all the defaults, including an assumption of 8 kHz
sampling rate for the input data. Note that the use of ESPS requires
making rasta using the ESPS-based Makefile, and also requires an
ESPS license. It will compute 9 log RASTA cepstral coefficients (8th
order, including a gain term).


To compute 12th order J-RASTA-PLP (which handles additive noise in addition
to the convolutional), using automatic noise estimation, and with
ascii input and output and a 16 kHz sampling rate:

	rasta -a -A -i speechin.asc -o speechout.asc -J -S 16000 -n 12 -f map.dat

The -f option specifies a mapping file that is used to reduce the
J-dependent variability of the rasta output by mapping spectra to a reference
J value that corresponds to clean speech.  In previous versions of this
program, there was a default value for -f, and we provided a mapping file
with the RASTA distribution.  There is no longer a default and we no longer
distribute a mapping file because the mapping file is highly dependent on the
speech being recognized.  It is absolutely vital that you derive a mapping
file from some subset of your own training data.
.BR create_mapping(1)
provides a simple mechanism for creating mapping files.

To compute PLP without any RASTA filtering, using binary shorts
at the input and binary floats at the output (and all the other
defaults):

	rasta < speechin > speechout
.SH AUTHOR
Nelson Morgan (original version, after a Fortran PLP by Hynek Hermansky)
\<morgan@icsi.berkeley.edu\>
.br \" How to break lines between authors
Later additions - Grace Tong, Chris Ehrlicher, Brian Kingsbury
\<bedk@icsi.berkeley.edu\>
.SH SEE ALSO
.BR "Hermansky, H., and Morgan, N., ``Rasta Processing of Speech,''"
.ul
IEEE Transactions on Speech and Audio Processing,
special issue on Robust Speech Recognition, vol.2 no. 4, pp. 578-589,
Oct., 1994

.BR create_mapping(1)
.SH BUGS
The noise estimation procedure used in adaptive J-RASTA processing (-J
option on, -C option off) assumes that the first 100 ms. of a signal
does not contain any speech.  If this assumption is violated, then it
produces poor estimates of the noise level early in the signal.  This
bug may cause ridiculously large energy values for early frames when
the usual cepstral outputs are produced, or ridiculously large outputs
if the -P or -R option is used.  Use of a history file reduces the bad
effects of insufficient leading non-speech, but does not eliminate
them.  In general, try to make sure you have at least 100 ms. of
non-speech leader in all inputs to rasta when using the -J option.

As we run out of letters of the alphabet, command-line options are
becoming increasingly non-mnemonic.

Doesn't yet implement the -N or -D switches to specify the rasta filter.
It also doesn't eliminate all problems
in speech recognition yet.
